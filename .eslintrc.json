{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "react-hooks",
    "import",
    "unused-imports",
    "jsx-a11y",
    "@typescript-eslint",
    "simple-import-sort"
  ],
  "rules": {
    "prettier/prettier": "error",
    "jsx-a11y/anchor-is-valid": "off",
    "comma-dangle": "off",
    "max-len": "off",
    "no-param-reassign": "off",
    "no-plusplus": "off",
    "no-return-assign": "off",
    "object-curly-newline": "off",
    "typescript-eslint/no-unused-vars": "off",
    "indent": "off",
    "@typescript-eslint/comma-dangle": "off",
    "@typescript-eslint/indent": [0],
    "@typescript-eslint/no-use-before-define": ["off"],
    "@typescript-eslint/no-unused-vars": ["off"],
    "@typescript-eslint/no-shadow": ["off"],
    "@typescript-eslint/dot-notation": ["off"],
    "@typescript-eslint/naming-convention": ["off"],
    "react/prop-types": ["off"],
    "react/jsx-uses-react": "error",
    "react/display-name": "off",
    "react/jsx-props-no-spreading": "off",
    "react/react-in-jsx-scope": "off",
    "react/require-default-props": "off",
    "react/no-unescaped-entities": "off",
    "react/forbid-prop-types": "off",
    "react/jsx-max-props-per-line": [
      1,
      {
        "maximum": 2,
        "when": "multiline"
      }
    ],
    "react/prefer-stateless-function": "off",
    "react/function-component-definition": [
      0,
      {
        "namedComponents": ["function-declaration", "arrow-function"],
        "unnamedComponents": ["function-declaration", "arrow-function"]
      }
    ],
    "react/jsx-filename-extension": "off",
    "no-use-before-define": "off",
    "arrow-body-style": "off",
    "prefer-arrow-callback": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "global-require": "off",
    "no-undef": "off",
    "no-unsafe-optional-chaining": "off",
    "no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "import/first": "error",
    "import/no-extraneous-dependencies": "off",
    "import/prefer-default-export": "off",
    "import/extensions": [
      "error",
      "never",
      {
        "ignorePackages": true,
        "pattern": {
          "js": "never",
          "jsx": "never",
          "ts": "never",
          "tsx": "never",
          "json": "always"
        }
      }
    ],
    "import/no-unresolved": [
      2,
      {
        "caseSensitive": false,
        "ignore": ["@exos"]
      }
    ],
    "simple-import-sort/exports": "error",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Packages `react` related packages come first.
          ["^react", "^@?\\w"],
          // Internal packages.
          ["^(@|components)(/.*|$)"],
          // Side effect imports.
          ["^\\u0000"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports.
          ["^.+\\.?(css)$"]
        ]
      }
    ],
    "lines-around-directive": ["error", "always"],
    // add new line above comment
    "lines-around-comment": [
      "error",
      {
        "beforeLineComment": false,
        "beforeBlockComment": true,
        "allowBlockStart": true,
        "allowClassStart": true,
        "allowObjectStart": true,
        "allowArrayStart": true
      }
    ],
    // add new line above return
    "newline-before-return": "error",
    // add new line below import
    "import/newline-after-import": [
      "error",
      {
        "count": 1
      }
    ],
    // add new line after each var, const, let declaration
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": ["*"],
        "next": ["multiline-const", "multiline-let", "multiline-var"]
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
